#함수
# def 함수명(매개변수):
#     실행문1
#     실행문2
#     return 결과값

# 함수의 호출: 함수를 실행하는 행위
# 인수: 함수를 호출할 때 전달하는 입력값



#함수의 입력값이 없는 경우
# def return_A():              #입력값이 없어도 함수의 실행이



# 함수의 반환값이 없는 경우        #입력값이 있지만 결과값을 반환하지는 않는다.
# def print_string(string:str):
#     print(string)


# 입력값, 반화값 둘다 없는 경우
# def what_time_is_it_now():
#     import datetime
#     print(str(datetime.datetime.now())[:16])


#매개변수의 개수가 몇 개가 필요한지 모를경우
# def sum_nums(*args):
#     total = 0
#     for num in args:
#         total += num
#     return total
#
# print(sum_nums(1,2,3,4,5,6,7,8,9))




# 문제1
# def sum_strings(*args):
#     total =' '
#     for strings in args:
#         total += strings
#     return total
# print("Hello","everyone","my","name","is","parkchanbin")



# 문제2
# def introduce_myself(name,age,job="학생"):
#
#     print(f"제 이름은 {name} 이고, 나이는 {age} 이며,직업은 {job} 입니다.")
# name = "이상연"
# age = 15
# job = "학생"
# introduce_myself(name,age)



# end=줄 바꿈해줌


#함수의 리턴 값은 항상 하나이다.
# def Fourcal(num1,num2):
#     return num1+num2,num1-num2,num1*num2,num1/num2


# global a=#함수 내에서 전역변수 a를 사용하겠다는 의미




def solution(numbers, hand):
    answer=''
    coord = [(0, -2), (-1, 1), (0,1), (1, 1), (-1, 0), (0, 0), (1, 0), (-1, -1), (0, -1), (1, -1)]
    l = (-1,-2) #왼손
    r = (1,-2)  #오른손

    for n in numbers:
        if n in [1,4,7]:
            answer += 'L'
            l = coord[n]
        elif n in [3,6,9]:
            answer += "R"
            r = coord[n]
        else:
            ld = abs(coord[n][0] - l[0]) + abs(coord[n][1] - l[1])
            rd = abs(coord[n][0] - r[0]) + abs(coord[n][1] - r[1])

            if ld == rd:
                if hand == 'left':
                    answer += 'L'
                    l=coord[n]
                    print(1)
                else:
                    answer += 'R'
                    r = coord[n]
                    print(2)
            elif ld > rd:
                answer += 'R'
                r = coord[n]
                print(3)
            else:
                answer += 'L'
                l = coord[n]
                print(4)
    return answer

hand="right"
numbers=[1, 3, 4, 5, 8, 2, 1, 4, 5, 9, 5]
print(solution(numbers,hand))
